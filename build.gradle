plugins {
    id 'java-library'
    id 'maven-publish'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'signing'
    id 'cl.franciscosolis.sonatype-central-upload' version '1.0.0'
}

group = 'dev.runabout'
version = '1.1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mongodb:bson:4.11.1'
}

ext.genOutputDir = file("$buildDir/generated-resources")

task generateVersionTxt()  {
    ext.outputFile = file("$genOutputDir/version.txt")
    outputs.file(outputFile)
    doLast {
        outputFile.text = """GroupId: ${project.group}
Name: ${project.name}
Version: $version
Build-time: ${java.time.LocalDateTime.now()}
"""
    }
}

sourceSets.main.output.dir genOutputDir, builtBy: generateVersionTxt

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.com/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            pom {
                name = 'runabout-java'
                description = 'Runabout Java Library'
                url = 'https://github.com/runabout-LLC/runabout-java'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'Runabout'
                        name = 'Runabout'
                    }
                }
                scm {
                    url = 'https://github.com/runabout-LLC/runabout-java'
                    connection = 'scm:git://github.com:Runabout-LLC/runabout-java.git'
                    developerConnection = 'scm:git://github.com:Runabout-LLC/runabout-java.git'
                }
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

sonatypeCentralUpload {
    username = findProperty('sonatypeUsername')
    password = findProperty('sonatypePassword')

    archives = files("${buildDir}/libs/runabout-java-${version}.jar",
            "${buildDir}/libs/runabout-java-${version}-javadoc.jar",
            "${buildDir}/libs/runabout-java-${version}-sources.jar")
    pom = file("$buildDir/publications/mavenJava/pom-default.xml")

    signingKey = findProperty("signingKey")
    signingKeyPassphrase = findProperty("signingPassword")
    publicKey = findProperty("signingPublicKey")
}